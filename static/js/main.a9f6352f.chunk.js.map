{"version":3,"sources":["reportWebVitals.js","apollo/config.js","apollo/queries.js","components/Snackbar.jsx","components/CreatItemForm.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseURL","token","httpLink","createHttpLink","uri","httpLinkFile","authLink","setContext","_","headers","authorization","authLinkFile","client","ApolloClient","link","concat","cache","InMemoryCache","GET_BOARDS","gql","CREATE_ITEM","CREATE_UPDATE","Snackbar","status","currentClass","className","CreatItemForm","useState","showSnackbar","setShowSnackbar","board","setBoard","group","setGroup","name","setName","description","setDescription","error","setError","fileInput","useRef","useQuery","boardsLoading","loading","boards","data","useMutation","createItem","createUpdate","createHandler","a","variables","board_id","Number","group_id","item_name","newItem","item_id","create_item","id","body","newUpdate","formData","FormData","append","JSON","stringify","create_update","current","files","fetch","mode","method","console","log","setTimeout","value","onChange","e","target","map","find","groups","title","type","ref","onClick","disabled","App","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a9f6352f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\n\nconst baseURL = 'https://api.monday.com/v2';\nexport const token = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjEzNTU0NjYyMywidWlkIjoyNjI5NjMwMywiaWFkIjoiMjAyMS0xMi0wMlQxMTowNzo0NS45MThaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTA1NTk0MzEsInJnbiI6InVzZTEifQ.8yF5KXTxKKoOgtCfGgvEVtO0ZmeJrn8PWKKW6OnPMJ8';\n\nconst httpLink = createHttpLink({\n  uri: baseURL,\n});\nconst httpLinkFile = createHttpLink({\n  uri: `${baseURL}/file`,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n    }\n  }\n});\nconst authLinkFile = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport const fileClient = new ApolloClient({\n  link: authLinkFile.concat(httpLinkFile),\n  cache: new InMemoryCache()\n});\n","import gql from \"graphql-tag\";\n\nexport const GET_BOARDS = gql`\n  query {\n    boards {\n      id\n      name\n      groups {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const CREATE_ITEM = gql`\n  mutation ($board_id: Int!, $group_id: String!, $item_name: String!) {\n    create_item (board_id: $board_id, group_id: $group_id, item_name: $item_name) {\n      id\n    }\n  }\n`;\n\nexport const CREATE_UPDATE = gql`\n  mutation ($item_id: Int!, $body: String!) {\n    create_update (item_id: $item_id, body: $body) {\n      id\n    }\n  }\n`;\n\nexport const ADD_FILE = gql`\n  mutation ($update_id: Int!, $file: File!) {\n    add_file_to_update (update_id: $update_id, file: $file) {\n      id\n    }\n  }\n`;\n","import React from 'react';\n\nconst Snackbar = ({ status }) => {\n  const currentClass = 'snackbar ' + status;\n\n  return (\n    <div className={currentClass}>\n      {(status === 'success') && \"Done! Task created!\"}\n      {(status === 'error') && \"Error! Try again.\"}\n    </div>\n  )\n}\n\nexport default Snackbar;\n","import React, { useRef, useState } from 'react';\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport { token, fileClient } from '../apollo/config';\nimport { GET_BOARDS, CREATE_ITEM, CREATE_UPDATE, ADD_FILE } from '../apollo/queries'\n\nimport Snackbar from './Snackbar';\n\nconst CreatItemForm = () => {\n  const [showSnackbar, setShowSnackbar] = useState(false)\n  const [board, setBoard] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [error, setError] = useState(false);\n  \n  const fileInput = useRef();\n  \n  const { loading: boardsLoading, data: boards } = useQuery(GET_BOARDS);\n  const [createItem] = useMutation(CREATE_ITEM);\n  const [createUpdate] = useMutation(CREATE_UPDATE);\n  // const [addFile, { loading: addFileLoading, error: addFileError, data: addFileData }] = useMutation(ADD_FILE);\n\n  const showNotification = () => {\n    function hideNotification() {\n      setShowSnackbar(false)\n      setError(false)\n    }\n\n    setShowSnackbar(true)\n    setTimeout(hideNotification, 3000)\n  }\n\n  const createHandler = async () => {\n    try {\n      const newItem = await createItem({\n        variables: { \n          board_id: Number(board),\n          group_id: group,\n          item_name: name\n        }\n      })\n      const newUpdate = await createUpdate({ \n        variables: { \n          item_id: Number(newItem.data.create_item.id),\n          body: description,\n        }\n      })\n      \n      const formData = new FormData();\n\n      formData.append('query', 'mutation ($update_id: Int!, $file: File!) {add_file_to_update (update_id: $update_id, file: $file) {id}}');\n      formData.append('variables', JSON.stringify({'update_id': Number(newUpdate.data.create_update.id) }));\n      formData.append('map', JSON.stringify({'image': 'variables.file'}));\n      formData.append('image', fileInput.current.files[0]);\n\n      await fetch('https://api.monday.com/v2/file', {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'multipart/form-data',\n        },\n        body: formData \n      });\n\n      // await fileClient.mutate({\n      //   mutation: ADD_FILE,\n      //   variables: {\n      //     update_id: Number(newUpdate.data.create_update.id),\n      //       file: fileInput.current.files[0]\n      //   }\n      // })\n  \n      console.log('Item created!');\n    } catch (err) {\n      setError(true)\n      console.log('Error:', err);\n    }\n        \n    await showNotification()\n\n    setBoard('')\n    setGroup('')\n    setName('')\n    setDescription('')\n  }\n\n  if(boardsLoading) return null\n\n  return (\n    <div>\n      {showSnackbar && <Snackbar status={error ? 'error' : 'success'}/>}\n\n      <h1>CREATE AN ITEM</h1>\n      <div className=\"form\">\n        <label className=\"board\">\n          <span className=\"label\">Board</span>\n          <select value={board} onChange={e => setBoard(e.target.value)} className=\"input\">\n            <option>Select Board</option>\n            {boards.boards.map(({ id, name }) => <option key={id} value={id}>{name}</option>)}\n          </select>\n        </label>\n        <label className=\"group\">\n          <span className=\"label\">Group</span>\n          <select value={group} onChange={e => setGroup(e.target.value)} className=\"input\">\n            <option>Select Group</option>\n            {board && boards.boards.find(({ id }) => id === board).groups.map(({ id, title }) => <option key={id} value={id}>{title}</option>)}\n          </select>\n        </label>\n        <label className=\"name\">\n          <span className=\"label\">Item Name</span>\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            type=\"text\"\n            className=\"input\"\n          />\n        </label>\n        <label className=\"description\">\n          <span className=\"label\">Description</span>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            className=\"input\"\n          />\n        </label>\n        <label className=\"image\">\n        <span className=\"label\">Add image</span>\n          <input type=\"file\" className=\"input\" ref={fileInput}/>\n        </label>\n\n        <button\n          onClick={() => createHandler()}\n          disabled={!board || !group || !name}\n          className=\"create-btn\"\n        >\n          CREATE TASK\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatItemForm;\n","import './App.css';\nimport CreatItemForm from './components/CreatItemForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreatItemForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from './apollo/config';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}